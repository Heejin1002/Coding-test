def solution(n, times):
    # 이진 탐색을 위한 시작점과 끝점 설정
    start = 0
    end = max(times) * n
    
    answer = end
    
    while start <= end:
        mid = (start + end) // 2  # 중간값 설정
        total_people = 0
        
        # 중간값 동안 각 심사관이 처리할 수 있는 사람 수 계산
        for time in times:
            total_people += mid // time
        
        # 처리한 사람 수가 목표 인원보다 크거나 같은 경우
        if total_people >= n:
            answer = min(answer, mid)  # 최소 시간 갱신
            end = mid - 1  # 최소 시간을 찾기 위해 범위를 왼쪽으로 이동
        else:
            start = mid + 1  # 아직 목표 인원에 도달하지 못한 경우, 범위를 오른쪽으로 이동
    
    return answer

# 예시 입력
n = 6
times = [7, 10]

# 함수 호출 및 결과 출력
print(solution(n, times))  # 결과: 28
